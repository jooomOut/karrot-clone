<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="LOGS_ABSOLUTE_PATH" value="./logs"/>

    <appender name="DEFAULT" class="ch.qos.logback.core.ConsoleAppender"> <!--콘솔에 찍는다.-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{36} - %msg%n</Pattern>
        </layout>
    </appender>

    <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>./logs/info.log</file> <!--파일 저장 경로-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch> <!--해당 레벨만-->
            <onMismatch>DENY</onMismatch> <!--다른건 기록 안함. 상위레벨도 안함-->
        </filter>
        <encoder>
            <!-- 해당 패턴 네이밍으로 현재 로그가 기록됨 -->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> <!--특정 규칙에 따라 저장 파일이 변경됨, 디폴트는 하루 -->
            <!-- 해당 패턴 네이밍으로 이전 파일이 기록됨 -->
            <fileNamePattern>./was-logs/info.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>180</maxHistory> <!--N일 지난 것 순서대로 삭제-->
        </rollingPolicy>
    </appender>

    <appender name="WARN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>./logs/warn.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>./was-logs/warn.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>180</maxHistory>
        </rollingPolicy>
    </appender>

    <root level="INFO"> <!--INFO 레벨 콘솔에 출력-->
        <appender-ref ref="DEFAULT"/>
    </root>

    <!--name은 패키지 따라가야 한다. 아무도 안알려주더라..-->
    <logger name="com.karrot.demo.web" additivity="false"> <!--해당 대상을 파일에 기록함-->
        <level value = "DEBUG" />
        <appender-ref ref="INFO_LOG" />
        <appender-ref ref="WARN_LOG" />
    </logger>

    <logger name="org.hibernate.SQL" additivity="false">
        <level value = "DEBUG" />
        <appender-ref ref="INFO_LOG" />
    </logger>

</configuration>

        <!--
        %Logger{length} : Logger name을 축약할 수 있다. {length}는 최대 자리 수, ex)logger{35}
        %-5level : 로그 레벨, -5는 출력의 고정폭 값(5글자)
        %msg : - 로그 메시지 (=%message)
        ${PID:-} : 프로세스 아이디
        %d : 로그 기록시간
        %p : 로깅 레벨
        %F : 로깅이 발생한 프로그램 파일명
        %M : 로깅일 발생한 메소드의 명
        %l : 로깅이 발생한 호출지의 정보
        %L : 로깅이 발생한 호출지의 라인 수
        %thread : 현재 Thread 명
        %t : 로깅이 발생한 Thread 명
        %c : 로깅이 발생한 카테고리
        %C : 로깅이 발생한 클래스 명
        %m : 로그 메시지
        %n : 줄바꿈(new line)
        %% : %를 출력
        %r : 애플리케이션 시작 이후부터 로깅이 발생한 시점까지의 시간(ms)
        -->

